describe('Anomaly Exploiter', function () {
    describe("Anomaly Exploiter's ability", function () {
        beforeEach(function () {
            this.setupTest({
                player1: {
                    house: 'logos',
                    inPlay: ['anomaly-exploiter', 'troll']
                },
                player2: {
                    inPlay: ['hunting-witch', 'batdrone']
                }
            });
        });

        it('should be able to destroy a damaged creature', function () {
            this.troll.tokens.damage = 2;
            this.player1.useAction(this.anomalyExploiter);
            expect(this.player1).toHavePrompt('Anomaly Exploiter');
            expect(this.player1).toBeAbleToSelect(this.troll);
            expect(this.player1).not.toBeAbleToSelect(this.huntingWitch);
            expect(this.player1).not.toBeAbleToSelect(this.batdrone);
            expect(this.player1).not.toBeAbleToSelect(this.anomalyExploiter);
            this.player1.clickCard(this.troll);
            expect(this.troll.location).toBe('discard');
        });

        it('should not be able to target undamaged creatures', function () {
            this.player1.useAction(this.anomalyExploiter);
            expect(this.player1).not.toBeAbleToSelect(this.troll);
            expect(this.player1).not.toBeAbleToSelect(this.huntingWitch);
            expect(this.player1).not.toBeAbleToSelect(this.batdrone);
            expect(this.player1).not.toBeAbleToSelect(this.anomalyExploiter);
        });

        it('should work with multiple damaged creatures', function () {
            this.troll.tokens.damage = 1;
            this.huntingWitch.tokens.damage = 1;
            this.batdrone.tokens.damage = 1;
            this.player1.useAction(this.anomalyExploiter);
            expect(this.player1).toHavePrompt('Anomaly Exploiter');
            expect(this.player1).toBeAbleToSelect(this.troll);
            expect(this.player1).toBeAbleToSelect(this.huntingWitch);
            expect(this.player1).toBeAbleToSelect(this.batdrone);
            this.player1.clickCard(this.huntingWitch);
            expect(this.huntingWitch.location).toBe('discard');
            expect(this.troll.location).toBe('play area');
            expect(this.batdrone.location).toBe('play area');
        });

        it('should not have a valid target when no creatures are damaged', function () {
            this.player1.clickCard(this.anomalyExploiter);
            expect(this.player1).not.toHavePromptButton("Use this creature's Action ability");
        });

        it('should remove ward tokens', function () {
            this.troll.tokens.damage = 3;
            this.troll.tokens.ward = 1;
            this.player1.useAction(this.anomalyExploiter);
            expect(this.player1).toBeAbleToSelect(this.troll);
            this.player1.clickCard(this.troll);
            expect(this.troll.location).toBe('play area');
        });
    });
});
